{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_poolManager",
          "type": "address",
          "internalType": "contract IPoolManager"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterAddLiquidity",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ModifyLiquidityParams",
          "components": [
            { "name": "tickLower", "type": "int24", "internalType": "int24" },
            { "name": "tickUpper", "type": "int24", "internalType": "int24" },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            { "name": "salt", "type": "bytes32", "internalType": "bytes32" }
          ]
        },
        { "name": "delta", "type": "int256", "internalType": "BalanceDelta" },
        {
          "name": "feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "bytes4", "internalType": "bytes4" },
        { "name": "", "type": "int256", "internalType": "BalanceDelta" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterDonate",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "amount0", "type": "uint256", "internalType": "uint256" },
        { "name": "amount1", "type": "uint256", "internalType": "uint256" },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterInitialize",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "internalType": "uint160"
        },
        { "name": "tick", "type": "int24", "internalType": "int24" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterRemoveLiquidity",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ModifyLiquidityParams",
          "components": [
            { "name": "tickLower", "type": "int24", "internalType": "int24" },
            { "name": "tickUpper", "type": "int24", "internalType": "int24" },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            { "name": "salt", "type": "bytes32", "internalType": "bytes32" }
          ]
        },
        { "name": "delta", "type": "int256", "internalType": "BalanceDelta" },
        {
          "name": "feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "bytes4", "internalType": "bytes4" },
        { "name": "", "type": "int256", "internalType": "BalanceDelta" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterSwap",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SwapParams",
          "components": [
            { "name": "zeroForOne", "type": "bool", "internalType": "bool" },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        { "name": "delta", "type": "int256", "internalType": "BalanceDelta" },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "bytes4", "internalType": "bytes4" },
        { "name": "", "type": "int128", "internalType": "int128" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeAddLiquidity",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ModifyLiquidityParams",
          "components": [
            { "name": "tickLower", "type": "int24", "internalType": "int24" },
            { "name": "tickUpper", "type": "int24", "internalType": "int24" },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            { "name": "salt", "type": "bytes32", "internalType": "bytes32" }
          ]
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeDonate",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "amount0", "type": "uint256", "internalType": "uint256" },
        { "name": "amount1", "type": "uint256", "internalType": "uint256" },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeInitialize",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "sqrtPriceX96", "type": "uint160", "internalType": "uint160" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeRemoveLiquidity",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ModifyLiquidityParams",
          "components": [
            { "name": "tickLower", "type": "int24", "internalType": "int24" },
            { "name": "tickUpper", "type": "int24", "internalType": "int24" },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            { "name": "salt", "type": "bytes32", "internalType": "bytes32" }
          ]
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeSwap",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SwapParams",
          "components": [
            { "name": "zeroForOne", "type": "bool", "internalType": "bool" },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        { "name": "hookData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "bytes4", "internalType": "bytes4" },
        { "name": "", "type": "int256", "internalType": "BeforeSwapDelta" },
        { "name": "", "type": "uint24", "internalType": "uint24" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "editOrder",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "orderId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "inNewTriggerTick",
          "type": "tuple",
          "internalType": "struct InEuint32",
          "components": [
            { "name": "ctHash", "type": "uint256", "internalType": "uint256" },
            {
              "name": "securityZone",
              "type": "uint8",
              "internalType": "uint8"
            },
            { "name": "utype", "type": "uint8", "internalType": "uint8" },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "amountDelta", "type": "int256", "internalType": "int256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "flushOrder",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getHookPermissions",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Hooks.Permissions",
          "components": [
            {
              "name": "beforeInitialize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterInitialize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeAddLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterAddLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeRemoveLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterRemoveLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            { "name": "beforeSwap", "type": "bool", "internalType": "bool" },
            { "name": "afterSwap", "type": "bool", "internalType": "bool" },
            { "name": "beforeDonate", "type": "bool", "internalType": "bool" },
            { "name": "afterDonate", "type": "bool", "internalType": "bool" },
            {
              "name": "beforeSwapReturnDelta",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterSwapReturnDelta",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterAddLiquidityReturnDelta",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterRemoveLiquidityReturnDelta",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getQueueLength",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lastTicks",
      "inputs": [{ "name": "", "type": "bytes32", "internalType": "PoolId" }],
      "outputs": [{ "name": "", "type": "int24", "internalType": "int24" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextOrderId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "orders",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        { "name": "trader", "type": "address", "internalType": "address" },
        { "name": "zeroForOne", "type": "bool", "internalType": "bool" },
        {
          "name": "status",
          "type": "uint8",
          "internalType": "enum Susanoo.OrderStatus"
        },
        { "name": "orderType", "type": "uint256", "internalType": "ebool" },
        { "name": "triggerTick", "type": "uint256", "internalType": "euint32" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "keyId", "type": "bytes32", "internalType": "PoolId" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "placeOrder",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            { "name": "fee", "type": "uint24", "internalType": "uint24" },
            { "name": "tickSpacing", "type": "int24", "internalType": "int24" },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        { "name": "zeroForOne", "type": "bool", "internalType": "bool" },
        {
          "name": "inTriggerTick",
          "type": "tuple",
          "internalType": "struct InEuint32",
          "components": [
            { "name": "ctHash", "type": "uint256", "internalType": "uint256" },
            {
              "name": "securityZone",
              "type": "uint8",
              "internalType": "uint8"
            },
            { "name": "utype", "type": "uint8", "internalType": "uint8" },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        {
          "name": "inOrderType",
          "type": "tuple",
          "internalType": "struct InEbool",
          "components": [
            { "name": "ctHash", "type": "uint256", "internalType": "uint256" },
            {
              "name": "securityZone",
              "type": "uint8",
              "internalType": "uint8"
            },
            { "name": "utype", "type": "uint8", "internalType": "uint8" },
            { "name": "signature", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "poolManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPoolManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unlockCallback",
      "inputs": [{ "name": "data", "type": "bytes", "internalType": "bytes" }],
      "outputs": [{ "name": "", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "DecryptionRequested",
      "inputs": [
        {
          "name": "orderId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "conditionHandle",
          "type": "uint256",
          "indexed": false,
          "internalType": "euint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OrderCancelled",
      "inputs": [
        {
          "name": "orderId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "trader",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "keyId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OrderEdited",
      "inputs": [
        {
          "name": "orderId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "trader",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newTriggerTick",
          "type": "uint256",
          "indexed": false,
          "internalType": "euint32"
        },
        {
          "name": "newAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "keyId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OrderExecuted",
      "inputs": [
        {
          "name": "orderId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "trader",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "executedTick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "keyId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OrderPlaced",
      "inputs": [
        {
          "name": "orderId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "trader",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "triggerTick",
          "type": "uint256",
          "indexed": false,
          "internalType": "euint32"
        },
        {
          "name": "zeroForOne",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "orderType",
          "type": "uint256",
          "indexed": false,
          "internalType": "ebool"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "keyId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "HookNotImplemented", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidEncryptedInput",
      "inputs": [
        { "name": "got", "type": "uint8", "internalType": "uint8" },
        { "name": "expected", "type": "uint8", "internalType": "uint8" }
      ]
    },
    { "type": "error", "name": "NotPoolManager", "inputs": [] },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SecurityZoneOutOfBounds",
      "inputs": [{ "name": "value", "type": "int32", "internalType": "int32" }]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1423:16900:134:-:0;;;3087:1;3058:30;;4162:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;782:26:129;;;;4210:12:134;879:25:131::1;899:4;879:19;:25::i;:::-;809:102:::0;4162:64:134;1423:16900;;1555:142:131;1632:58;1662:5;1669:20;1423:16900:134;;;;;;;;-1:-1:-1;1423:16900:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4335:569:134;;;;;;;;-1:-1:-1;4335:569:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4232:679;1669:20:131;1632:29;:58::i;:::-;1555:142;:::o;3610:1599:90:-;3729:28;;:74;;1397:7;16467:29;;:34;;3729:74;;;:166;;-1:-1:-1;3823:27:90;;;;:72;;1460:7;16467:29;;:34;;3823:72;;3729:166;:265;;;-1:-1:-1;3915:30:90;;;;:79;;1528:7;16467:29;;:34;;3915:79;;3729:265;:362;;;-1:-1:-1;4014:29:90;;;;:77;;1594:7;16467:29;;:34;;4014:77;;3729:362;:467;;;-1:-1:-1;4111:33:90;;;;:85;;1665:6;16467:29;;:34;;4111:85;;3729:467;:570;;;-1:-1:-1;4216:32:90;;;;:83;;1733:6;16467:29;;:34;;4216:83;;3729:570;:652;;;-1:-1:-1;4319:22:90;;;;:62;;1791:6;16467:29;;:34;;4319:62;;3729:652;:732;;;-1:-1:-1;4401:21:90;;;;:60;;1847:6;16467:29;;:34;;4401:60;;3729:732;:818;;;-1:-1:-1;4481:24:90;;;;:66;;1907:6;16467:29;;:34;;4481:66;;3729:818;:902;;;-1:-1:-1;4567:23:90;;;;:64;;1965:6;16467:29;;:34;;4567:64;;3729:902;:1009;;;-1:-1:-1;4651:33:90;;;;:87;;2037:6;16467:29;;:34;;4651:87;;3729:1009;:1114;;;-1:-1:-1;4758:32:90;;;;:85;;2107:6;16467:29;;:34;;4758:85;;3729:1114;:1236;;;-1:-1:-1;4863:40:90;;;;:102;;2186:6;16467:29;;:34;;4863:102;;3729:1236;:1384;;;-1:-1:-1;4985:43:90;;;;:128;;2268:6;16467:29;;:34;;4985:128;;3729:1384;3712:1491;;;5138:54;-1:-1:-1;;;5186:4:90;5138:39;:54::i;:::-;3610:1599;;:::o;1009:257:86:-;1133:8;1130:1;1123:19;-1:-1:-1;;;;;1172:4:86;1168:53;1162:4;1155:67;1245:4;1242:1;1235:15;14:312:135;106:6;159:2;147:9;138:7;134:23;130:32;127:52;;;175:1;172;165:12;127:52;201:16;;-1:-1:-1;;;;;246:31:135;;236:42;;226:70;;292:1;289;282:12;226:70;315:5;14:312;-1:-1:-1;;;14:312:135:o;:::-;1423:16900:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1423:16900:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4968:1539;;;;;;:::i;:::-;;:::i;:::-;;;3421:25:135;;;3409:2;3394:18;4968:1539:134;;;;;;;;3093:290:131;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;5139:33:135;;;5121:52;;5109:2;5094:18;3093:290:131;4977:202:135;3058:30:134;;;;;;5032:272:131;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;6411:33:135;;;6393:52;;6476:2;6461:18;;6454:34;;;;6536:8;6524:21;6504:18;;;6497:49;6381:2;6366:18;5032:272:131;6159:393:135;4329:384:131;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;7924:33:135;;;7906:52;;7989:2;7974:18;;7967:34;;;;7879:18;4329:384:131;7701:306:135;2134:240:131;;;;;;:::i;:::-;;:::i;8944:207:134:-;;;;;;:::i;:::-;;:::i;16689:267::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3140:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3140:39:134;;;;-1:-1:-1;;;3140:39:134;;;;;-1:-1:-1;;;3140:39:134;;;;;;;;;;;;;;;;;;;;;;:::i;5559:298:131:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;12519:33:135;;;12501:52;;12600:2;12589:22;;;;12584:2;12569:18;;12562:50;12474:18;5559:298:131;12331:287:135;6108:285:131;;;;;;:::i;:::-;;:::i;4232:679:134:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:569:134;;;;;;;;-1:-1:-1;4335:569:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4232:679;;;;;;;;:::i;16389:114::-;;;;;;:::i;:::-;;:::i;:::-;;411:41:129;;;;;;;;-1:-1:-1;;;;;15535:55:135;;;15517:74;;15505:2;15490:18;411:41:129;15349:248:135;1730:224:131;;;;;;:::i;:::-;;:::i;3205:41:134:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16508:1:135;16497:21;;;;16479:40;;16467:2;16452:18;3205:41:134;16337:188:135;6564:2292:134;;;;;;:::i;:::-;;:::i;4968:1539::-;5167:7;5186:15;5197:3;5186:10;:15::i;:::-;5245;5263:11;;;5299:10;:8;;;;;;;:3;:8;:::i;:::-;515:4:120;496:24;;;271:265;5299:10:134;5284:25;;5319:19;5341:28;5355:13;5341;:28::i;:::-;5319:50;;5379:26;5393:11;5379:13;:26::i;:::-;5415:28;5431:11;5415:15;:28::i;:::-;5453:15;5471:24;5483:11;5471;:24::i;:::-;5453:42;;5505:24;5519:9;5505:13;:24::i;:::-;5539:26;5555:9;5539:15;:26::i;:::-;5599:251;;;;;;;;5627:10;5599:251;;;;;;;;;5575:21;;5599:251;;5575:21;5599:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5860:15:134;;;:6;:15;;;;;:26;;;;;;;;;;-1:-1:-1;;;5860:26:134;;;;;-1:-1:-1;;;;;5860:26:134;;;;;;;;;;;;;;;5575:275;;-1:-1:-1;5575:275:134;;5860:15;;;;-1:-1:-1;;;;5860:26:134;-1:-1:-1;;;5860:26:134;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5860:26:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5896:21:134;;;:14;:21;;;;;:34;;5922:7;5896:25;:34::i;:::-;-1:-1:-1;5945:83:134;;;18709:25:135;;;18765:2;18750:18;;18743:34;;;18820:14;;18813:22;18793:18;;;18786:50;18867:2;18852:18;;18845:34;;;18910:3;18895:19;;18888:35;;;5945:83:134;;6022:5;;5966:10;;5945:83;;;;;18696:3:135;5945:83:134;;;6217:13;6233:10;:76;;6295:13;;;;;;;;:::i;:::-;6233:76;;;6262:13;;;;:3;:13;:::i;:::-;6217:92;-1:-1:-1;;;;;;6327:19:134;;6319:63;;;;-1:-1:-1;;;6319:63:134;;19418:2:135;6319:63:134;;;19400:21:135;19457:2;19437:18;;;19430:30;19496:33;19476:18;;;19469:61;19547:18;;6319:63:134;;;;;;;;;6392:61;;-1:-1:-1;;;6392:61:134;;6419:10;6392:61;;;19778:74:135;6439:4:134;19868:18:135;;;19861:83;19960:18;;;19953:34;;;-1:-1:-1;;;;;6392:26:134;;;;;19751:18:135;;6392:61:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6463:11:134;:13;;;:11;:13;;;:::i;:::-;;;;-1:-1:-1;6493:7:134;;4968:1539;-1:-1:-1;;;;;;;;;;;;4968:1539:134:o;3093:290:131:-;3298:6;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;3323:53:131::1;3346:6;3354:3;3359:6;3367:8;;3323:22;:53::i;:::-;3316:60:::0;3093:290;-1:-1:-1;;;;;;3093:290:131:o;5032:272::-;5201:6;;;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;5255:42:131::1;5267:6;5275:3;5280:6;5288:8;;5255:11;:42::i;:::-;5248:49;;;;;;5032:272:::0;;;;;;;;;:::o;4329:384::-;4595:6;;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;4634:72:131::1;4656:6;4664:3;4669:6;4677:5;4684:11;4697:8;;4634:21;:72::i;:::-;4627:79;;;;4329:384:::0;;;;;;;;;;:::o;2134:240::-;2289:6;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;2318:49:131::1;2335:6;2343:3;2348:12;2362:4;2318:16;:49::i;:::-;2311:56:::0;2134:240;-1:-1:-1;;;;;2134:240:131:o;8944:207:134:-;9013:7;;9046:20;9013:7;9067:10;:8;;;;;;;:3;:8;:::i;:10::-;9046:32;;;;;;;;;;;-1:-1:-1;9046:32:134;;-1:-1:-1;;;;;9046:32:134;;-1:-1:-1;9095:28:134;;:49;;9130:5;-1:-1:-1;;;;;9130:12:134;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9095:49;;;9126:1;9095:49;9088:56;8944:207;-1:-1:-1;;;8944:207:134:o;16689:267::-;16777:12;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;16801:18:134::1;16822:27;::::0;;::::1;16833:4:::0;16822:27:::1;:::i;:::-;16801:48;;16859:28;16883:3;16859:23;:28::i;:::-;-1:-1:-1::0;;3043:9:134::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;3043:9:134;;719:1:129::1;16689:267:134::0;;;;:::o;5559:298:131:-;5769:6;;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;5802:48:131::1;5813:6;5821:3;5826:6;5834:5;5841:8;;5802:10;:48::i;:::-;5795:55;;;;719:1:129;5559:298:131::0;;;;;;;;;:::o;6108:285::-;6307:6;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;6332:54:131::1;6346:6;6354:3;6359:7;6368;6377:8;;6332:13;:54::i;:::-;6325:61:::0;6108:285;-1:-1:-1;;;;;;;6108:285:131:o;16389:114:134:-;1215:21:47;:19;:21::i;:::-;16461:11:134::1;-1:-1:-1::0;;;;;16461:18:134::1;;16491:3;16480:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;16461:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;16461:35:134::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;1257:20:47::0;:18;:20::i;:::-;16389:114:134;:::o;1730:224:131:-;1874:6;650:10:129;-1:-1:-1;;;;;672:11:129;650:34;;646:63;;693:16;;-1:-1:-1;;;693:16:129;;;;;;;;;;;646:63;1903:44:131::1;1921:6;1929:3;1934:12;1903:17;:44::i;:::-;1896:51:::0;1730:224;-1:-1:-1;;;;1730:224:131:o;6564:2292:134:-;6708:19;6730:15;;;:6;:15;;;;;6824:10;:8;;;;;;;:3;:8;:::i;:10::-;6785:11;;;;6763:73;6755:101;;;;-1:-1:-1;;;6755:101:134;;22577:2:135;6755:101:134;;;22559:21:135;22616:2;22596:18;;;22589:30;-1:-1:-1;;;22635:18:135;;;22628:45;22690:18;;6755:101:134;22375:339:135;6755:101:134;6874:12;;-1:-1:-1;;;;;6874:12:134;6890:10;6874:26;6866:53;;;;-1:-1:-1;;;6866:53:134;;22921:2:135;6866:53:134;;;22903:21:135;22960:2;22940:18;;;22933:30;22999:16;22979:18;;;22972:44;23033:18;;6866:53:134;22719:338:135;6866:53:134;6953:18;6937:12;;-1:-1:-1;;;6937:12:134;;;;:34;;;;;;;;:::i;:::-;;6929:63;;;;-1:-1:-1;;;6929:63:134;;23264:2:135;6929:63:134;;;23246:21:135;23303:2;23283:18;;;23276:30;-1:-1:-1;;;23322:18:135;;;23315:46;23378:18;;6929:63:134;23062:340:135;6929:63:134;7027:12;;;;7065:16;;7003:21;;-1:-1:-1;;;7065:16:134;;;;:82;;7133:13;;;;;;;;:::i;:::-;7065:82;;;7100:13;;;;:3;:13;:::i;:::-;7049:98;;7250:31;7264:16;7250:13;:31::i;:::-;7230:17;;;:51;;;7291:32;;:13;:32::i;:::-;7333:34;7349:5;:17;;;7333:15;:34::i;:::-;7560:1;7546:11;:15;7542:1308;;;7641:11;7608:22;7687:30;7641:11;7687:13;:30;:::i;:::-;7731:12;;;:24;;;7769:69;;-1:-1:-1;;;7769:69:134;;7796:10;7769:69;;;19778:74:135;7816:4:134;19868:18:135;;;19861:83;19960:18;;;19953:34;;;7731:24:134;;-1:-1:-1;;;;;;7769:26:134;;;;;19751:18:135;;7769:69:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7920:10:134;:8;;;;;;;:3;:8;:::i;:10::-;7890:17;;;;7857:74;;;23765:25:135;;;23821:2;23806:18;;23799:34;;;;23849:18;;23842:34;;;7878:10:134;;7857:74;;23753:2:135;23738:18;7857:74:134;;;;;;;7563:379;;7542:1308;;;7966:1;7952:11;:15;7948:902;;;8014:22;8047:12;8048:11;8047:12;:::i;:::-;8014:46;;8100:13;8082:14;:31;;8074:75;;;;-1:-1:-1;;;8074:75:134;;24230:2:135;8074:75:134;;;24212:21:135;24269:2;24249:18;;;24242:30;24308:33;24288:18;;;24281:61;24359:18;;8074:75:134;24028:355:135;8074:75:134;8163:17;8183:30;8199:14;8183:13;:30;:::i;:::-;8227:12;;;:24;;;8265:50;;-1:-1:-1;;;8265:50:134;;8288:10;8265:50;;;24695:74:135;24785:18;;;24778:34;;;8227:24:134;;-1:-1:-1;;;;;;8265:22:134;;;;;24668:18:135;;8265:50:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8334:9;8347:1;8334:14;8330:338;;8368:36;;-1:-1:-1;;;;8368:36:134;;;;;8437:11;;;;-1:-1:-1;8422:27:134;;;:14;:27;;;;;:43;;8457:7;8422:34;:43::i;:::-;-1:-1:-1;8524:10:134;:8;;;;;;;:3;:8;:::i;:10::-;8488:47;;3421:25:135;;;8512:10:134;;8488:47;;3409:2:135;3394:18;8488:47:134;;;;;;;8330:338;;;8642:10;:8;;;;;;;:3;:8;:::i;8330:338::-;7969:709;;7948:902;;;8828:10;:8;;;;;;;:3;:8;:::i;:10::-;8794:17;;;;8761:78;;;23765:25:135;;;23821:2;23806:18;;23799:34;;;;23849:18;;23842:34;;;8782:10:134;;8761:78;;23753:2:135;23738:18;8761:78:134;;;;;;;7948:902;6698:2158;;;6564:2292;;;;:::o;133238:330:0:-;133372:11;;;;133299:7;;2843:1:1;;133372:28:0;;;;133368:115;;133445:11;;;;;133423:49;;-1:-1:-1;;;133423:49:0;;25019:4:135;25007:17;;;133423:49:0;;;24989:36:135;25061:17;;;25041:18;;;25034:45;24962:18;;133423:49:0;24823:262:135;133368:115:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5874:179:1;;;;;;;5911:12;;5874:179;;5951:18;;;;5874:179;;;;;;2843:1;5874:179;;;;;;;6027:15;;;;5874:179;;;;133513:47:0;;:16;:47::i;164994:140::-;165048:79;;-1:-1:-1;;;165048:79:0;;;;;25264:25:135;;;165121:4:0;25305:18:135;;;25298:83;874:42:0;;165048:40;;25237:18:135;;165048:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;164994:140;:::o;168061:139::-;168117:76;;-1:-1:-1;;;168117:76:0;;;;;25264:25:135;;;168182:10:0;25305:18:135;;;25298:83;874:42:0;;168117:40;;25237:18:135;;168117:76:0;25090:297:135;131210:318:0;131336:11;;;;131267:5;;;;131336:28;;;131332:115;;131409:11;;;;;131387:49;;-1:-1:-1;;;131387:49:0;;25019:4:135;25007:17;;;131387:49:0;;;24989:36:135;25061:17;;;25041:18;;;25034:45;24962:18;;131387:49:0;24823:262:135;131332:115:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4964:177:1;;;;;;;5001:12;;4964:177;;5041:18;;;;4964:177;;;;;;;;;;;;;5115:15;;;;4964:177;;;;131475:45:0;;133513:16;:47::i;15133:129:63:-;15200:4;15223:32;15228:3;15248:5;15223:4;:32::i;3389:213:131:-;3546:6;3575:20;;-1:-1:-1;;;3575:20:131;;;;;;;;;;;9804:310:134;9951:6;;;9998:28;;;;;;;;10022:3;9998:28;:::i;:::-;:23;:28::i;:::-;-1:-1:-1;;;;10044:24:134;830:1:118;;-1:-1:-1;830:1:118;;-1:-1:-1;9804:310:134;-1:-1:-1;;;;;9804:310:134:o;4719:280:131:-;4933:6;4941:12;4972:20;;-1:-1:-1;;;4972:20:131;;;;;;;;;;;9562:236:134;9667:6;9685:22;9703:3;9685:17;:22::i;:::-;-1:-1:-1;9741:4:134;9717:9;:21;9727:10;:8;;;;;;;:3;:8;:::i;:10::-;9717:21;;;;;;;;;;;-1:-1:-1;9717:21:134;:28;;-1:-1:-1;;9717:28:134;;;;;;;;;;;;-1:-1:-1;;;;9762:29:134;9562:236;-1:-1:-1;;;;9562:236:134:o;12080:784::-;12151:11;12165:20;:32;12186:10;:3;515:4:120;496:24;;;271:265;12186:10:134;12165:32;;;;;;;;;;;-1:-1:-1;12165:32:134;;-1:-1:-1;;;;;12165:32:134;;-1:-1:-1;12165:32:134;12207:76;;12255:7;12080:784;:::o;12207:76::-;12301:5;-1:-1:-1;;;;;12301:13:134;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12293:565;;12332:25;12360:5;-1:-1:-1;;;;;12360:10:134;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12332:40;-1:-1:-1;12332:40:134;12386:14;;12492:42;12332:40;12492:24;:42::i;:::-;12450:84;;;;12553:9;12548:54;;12582:5;;;;12141:723;12080:784;:::o;12548:54::-;12615:5;-1:-1:-1;;;;;12615:9:134;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12645:13;:18;;12662:1;12645:18;12641:163;;12683:31;12717:22;;;:14;:22;;;;;;;;;12683:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12757:32;;12771:3;;12757:13;:32::i;:::-;12665:139;12641:163;-1:-1:-1;;12825:22:134;;;;:14;:22;;;;;12818:29;;;;;;;-1:-1:-1;;12818:29:134;;;-1:-1:-1;12293:565:134;;;12141:723;12080:784;:::o;10157:650::-;10324:6;;10380:4;10358:10;:27;10354:93;;-1:-1:-1;;;;10409:23:134;-1:-1:-1;10434:1:134;10401:35;;10354:93;10460:17;10483:32;10504:10;:8;;;;;;;:3;:8;:::i;:10::-;-1:-1:-1;;;;;10483:11:134;:20;;;:32::i;:::-;10457:58;;;;;10525:14;10542:9;:21;10552:10;:3;:8;;;;;;;;;;:::i;:10::-;10542:21;;;;;;;;;;;-1:-1:-1;10542:21:134;;;;;-1:-1:-1;10643:66:134;10682:3;10542:21;10697:11;10643:38;:66::i;:::-;10743:11;10719:9;:21;10729:10;:8;;;;;;;:3;:8;:::i;:10::-;10719:21;;;;;;;;;;;-1:-1:-1;10719:21:134;;;:35;;-1:-1:-1;;10719:35:134;;;;;;;;;;;;;-1:-1:-1;;;10773:23:134;-1:-1:-1;;;10157:650:134;-1:-1:-1;;;;;;;;;10157:650:134:o;1941:315:47:-;2095:25;:23;:25::i;:::-;2195:54;2244:4;637:66;2195:41;:48;;:54::i;:::-;1941:315::o;2262:110::-;2310:55;2359:5;637:66;2310:41;1666:115:52;15430:135:63;15500:4;15523:35;15531:3;15551:5;15523:7;:35::i;6153:166:0:-;6247:65;;-1:-1:-1;;;6247:65:0;;6221:7;;874:42;;6247:46;;:65;;6294:5;;6301:10;;6247:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2497:406:63:-;2560:4;5197:21;;;:14;;;:21;;;;;;2576:321;;-1:-1:-1;2618:23:63;;;;;;;;:11;:23;;;;;;;;;;;;;2800:18;;2776:21;;;:14;;;:21;;;;;;:42;;;;2832:11;;2576:321;-1:-1:-1;2881:5:63;2874:12;;9227:329:134;9293:5;;9326:10;:8;;;;;;;:3;:8;:::i;:10::-;9346:11;9360:28;;;:20;:28;;;;;;9310:26;;-1:-1:-1;;;;;;9360:28:134;;9399:128;;9455:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9480:28:134;;;;:20;:28;;;;;:36;;;;-1:-1:-1;;;;;9480:36:134;;;;;;-1:-1:-1;9544:5:134;9227:329;-1:-1:-1;;;9227:329:134:o;107572:253:0:-;107642:14;107658;107685:15;107702;107721:50;107763:6;107721:25;:50::i;:::-;107684:87;;;;-1:-1:-1;107572:253:0;-1:-1:-1;;;;107572:253:0:o;14725:1658:134:-;1215:21:47;:19;:21::i;:::-;14816:19:134::1;14838:15:::0;;;:6:::1;:15;::::0;;;;;14871:12;;-1:-1:-1;;;14871:12:134;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;14863:63;;;::::0;-1:-1:-1;;;14863:63:134;;23264:2:135;14863:63:134::1;::::0;::::1;23246:21:135::0;23303:2;23283:18;;;23276:30;-1:-1:-1;;;23322:18:135;;;23315:46;23378:18;;14863:63:134::1;23062:340:135::0;14863:63:134::1;515:4:120::0;496:24;;14966:11:134::1;::::0;::::1;::::0;14944:73:::1;14936:101;;;::::0;-1:-1:-1;;;14936:101:134;;22577:2:135;14936:101:134::1;::::0;::::1;22559:21:135::0;22616:2;22596:18;;;22589:30;-1:-1:-1;;;22635:18:135;;;22628:45;22690:18;;14936:101:134::1;22375:339:135::0;14936:101:134::1;15050:17;15073:32;15094:10;:3;515:4:120::0;496:24;;;271:265;15073:32:134::1;-1:-1:-1::0;;15115:35:134;;-1:-1:-1;;;;15115:35:134::1;-1:-1:-1::0;;;15115:35:134::1;::::0;;;15234:370:::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;15275:16:134;;::::1;;;15234:370;;::::0;;15397:12:::1;::::0;::::1;::::0;15047:58;;-1:-1:-1;;;;15181:433:134::1;::::0;15217:3;;15234:370;::::1;::::0;::::1;::::0;15389:21:::1;::::0;::::1;:::i;:::-;15234:370:::0;;15513:16;;15234:370:::1;::::0;;::::1;::::0;-1:-1:-1;;;15513:16:134;::::1;;;:76;;15562:27;15588:1;2042:49:104;15562:27:134;:::i;:::-;15513:76;;;15532:27;1862:10:104;15558:1:134;15532:27;:::i;:::-;-1:-1:-1::0;;;;;15234:370:134::1;::::0;;15181:22:::1;:433::i;:::-;15628:16:::0;;15160:454;;-1:-1:-1;;;;15628:16:134;::::1;;;15624:624;;;15746:13;::::0;::::1;::::0;15725:18:::1;15795:15;:5:::0;2303:2:117;2292:28;;2147:189;15795:15:134::1;15773:37;;15843:1;15828:12;:16;;;15824:110;;;15883:12:::0;;15864:55:::1;::::0;-1:-1:-1;;;;;15864:18:134;;::::1;::::0;15883:12:::1;15864:55;::::0;::::1;:18;:55::i;:::-;15646:298;;15624:624;;;16050:13:::0;;16029:18:::1;16099:15;:5:::0;2107:3:117;2103:22;;1958:183;16099:15:134::1;16077:37;;16147:1;16132:12;:16;;;16128:110;;;16187:12:::0;;16168:55:::1;::::0;-1:-1:-1;;;;;16168:18:134;;::::1;::::0;16187:12:::1;16168:55;::::0;::::1;:18;:55::i;:::-;15950:298;;15624:624;16272:11;::::0;::::1;::::0;16257:27:::1;::::0;;;:14:::1;:27;::::0;;;;:43:::1;::::0;16292:7;16257:34:::1;:43::i;:::-;-1:-1:-1::0;515:4:120;496:24;;16338:12:134;;16315:61:::1;::::0;;27051:25:135;;;27123:1;27112:21;;;27107:2;27092:18;;27085:49;-1:-1:-1;;;;;16338:12:134;;::::1;::::0;16315:61:::1;::::0;27024:18:135;16315:61:134::1;;;;;;;14806:1577;;;1257:20:47::0;:18;:20::i;1580:996:101:-;1682:20;1704:10;1716:18;1736:12;1821:17;1841:25;1859:6;1841:17;:25::i;:::-;1892:27;;-1:-1:-1;;;1892:27:101;;;;;3421:25:135;;;1821:45:101;;-1:-1:-1;1877:12:101;;-1:-1:-1;;;;;1892:16:101;;;;;3394:18:135;;1892:27:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1877:42;;-1:-1:-1;;;;;2245:4:101;2241:53;2225:69;;2374:4;2369:3;2365:14;2362:1;2351:29;2343:37;;2464:8;2457:4;2452:3;2448:14;2444:29;2429:44;;2551:8;2544:4;2539:3;2535:14;2531:29;2522:38;;2172:398;;1580:996;;;;;;;:::o;10916:1067:134:-;11061:22;;;;;;;;;11039:19;11138:14;11039:19;11153:10;:8;;;;;;;:3;:8;:::i;:10::-;11138:26;;;;;;;;;;;11093:71;;11174:11;11188:22;11206:3;11188:17;:22::i;:::-;11174:36;;11226:9;11221:756;11245:21;:12;:19;:21::i;:::-;11241:1;:25;11221:756;;;11287:15;11305:18;:12;11321:1;11305:15;:18::i;:::-;11337:19;11359:15;;;:6;:15;;;;;11287:36;;-1:-1:-1;11392:12:134;;-1:-1:-1;;;11392:12:134;;;;:34;;;;;;;;:::i;:::-;;11388:81;;11446:8;;;;11388:81;11508:64;;;;;;;;;;-1:-1:-1;;;;;11508:64:134;;;;;-1:-1:-1;;;11508:64:134;;;;;;;;;;11483:22;;11508:64;;;11537:5;;11508:64;;;;-1:-1:-1;;;11508:64:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11544:11;11557:14;11508:28;:64::i;:::-;11689:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11586:14;11648:22;;;:14;:22;;;;;;:138;;;;;;;;;;;;;;;;;-1:-1:-1;;11648:138:134;;;;;;;;;;;;;;;;;11483:89;-1:-1:-1;11483:89:134;11838:26;11483:89;11838:11;:26::i;:::-;11878:25;;-1:-1:-1;;;11878:25:134;;;;;3421::135;;;-1:-1:-1;;;;;11878:10:134;;;;;3394:18:135;;11878:25:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11923:43:134;;;27926:25:135;;;27982:2;27967:18;;27960:34;;;11923:43:134;;-1:-1:-1;27899:18:135;;-1:-1:-1;11923:43:134;;;;;;;11273:704;;;;11221:756;11268:3;;11221:756;;1778:157:47;637:66;3375:11:52;1836:93:47;;;1888:30;;-1:-1:-1;;;1888:30:47;;;;;;;;;;;3491:139:52;3608:5;3602:4;3595:19;3491:139;;:::o;3071:1368:63:-;3137:4;3266:21;;;:14;;;:21;;;;;;3302:13;;3298:1135;;3669:18;3690:12;3701:1;3690:8;:12;:::i;:::-;3736:18;;3669:33;;-1:-1:-1;3716:17:63;;3736:22;;3757:1;;3736:22;:::i;:::-;3716:42;;3791:9;3777:10;:23;3773:378;;3820:17;3840:3;:11;;3852:9;3840:22;;;;;;;;:::i;:::-;;;;;;;;;3820:42;;3987:9;3961:3;:11;;3973:10;3961:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;4100:25;;;:14;;;:25;;;;;:36;;;3773:378;4229:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4332:3;:14;;:21;4347:5;4332:21;;;;;;;;;;;4325:28;;;4375:4;4368:11;;;;;;;3298:1135;4417:5;4410:12;;;;;3298:1135;3143:1296;3071:1368;;;;:::o;5453:186:0:-;5570:62;;-1:-1:-1;;;5570:62:0;;;;;3421:25:135;;;5521:14:0;;;;874:42;;5570:55;;3394:18:135;;5570:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5563:69;;;;5453:186;;;:::o;16962:928:134:-;17058:12;17082:18;17103:11;-1:-1:-1;;;;;17103:16:134;;17120:3;17125:6;17103:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17189:17;;17082:54;;-1:-1:-1;17185:676:134;;;17296:1;17278:15;:5;2107:3:117;2103:22;;1958:183;17278:15:134;:19;;;17274:107;;;17325:13;;17317:49;;17349:15;:5;2107:3:117;2103:22;;1958:183;17349:15:134;17348:16;;;:::i;:::-;17317:7;:49::i;:::-;17469:1;17451:15;:5;2303:2:117;2292:28;;2147:189;17451:15:134;:19;;;17447:104;;;17490:46;17496:3;:13;;;17519:15;:5;2303:2:117;2292:28;;2147:189;17519:15:134;17490:5;:46::i;17185:676::-;17648:1;17630:15;:5;2107:3:117;2103:22;;1958:183;17630:15:134;:19;;;17626:104;;;17675:13;;17669:46;;17698:15;:5;2107:3:117;2103:22;;1958:183;17669:46:134;17766:1;17748:15;:5;2303:2:117;2292:28;;2147:189;17748:15:134;:19;;;17744:107;;;17787:49;17795:3;:13;;;17819:15;:5;2303:2:117;2292:28;;2147:189;1472:2873:119;1743:12;-1:-1:-1;;;;;1769:22:119;;1765:2574;;1956:1;1953;1950;1947;1939:6;1935:2;1928:5;1923:35;1912:46;;2086:7;2081:127;;2113:80;2148:2;2159:1;-1:-1:-1;;;2113:34:119;:80::i;:::-;1765:2574;;;2352:4;2346:11;-1:-1:-1;;;2483:3:119;2476:79;-1:-1:-1;;;;;2596:2:119;2592:51;2588:1;2583:3;2579:11;2572:72;2720:6;2715:2;2710:3;2706:12;2699:28;3649:2;3646:1;3642:2;3637:3;3634:1;3624:8;3617:5;3612:40;3141:16;3134:24;3128:2;3110:16;3107:24;3103:1;3099;3093:8;3090:15;3086:46;3083:76;2859:815;2828:846;;3752:1;3747:3;3740:14;3853:1;3846:4;3841:3;3837:14;3830:25;3956:1;3949:4;3944:3;3940:14;3933:25;;4125:7;4120:209;;4152:162;4224:8;-1:-1:-1;;;;;;4152:34:119;:162::i;:::-;1546:2799;1472:2873;;;:::o;14852:160:101:-;14953:51;;14917:7;;14953:51;;14984:6;;414:1;;14953:51;;30507:19:135;;;30551:2;30542:12;;30535:28;30588:2;30579:12;;30350:247;14953:51:101;;;;;;;;;;;;;14943:62;;;;;;14936:69;;14852:160;;;:::o;16265:112:63:-;16325:7;16351:19;16359:3;5393:18;;5311:107;16719:135;16790:7;16824:22;16828:3;16840:5;16824:3;:22::i;12870:1849:134:-;13001:8;;13294:62;13315:39;2966:6;13315:18;;;;:39;:::i;:::-;13294:62;;:13;:62::i;:::-;13269:87;;13366:23;13392:27;13404:14;13392:11;:27::i;:::-;13366:53;;13430:19;13452:5;:17;;;13430:39;;13479:25;13507:29;13519:5;:16;;;13507:11;:29::i;:::-;13564:15;;;;13479:57;;-1:-1:-1;13546:15:134;13652:64;13660:17;13679:36;13687:14;13703:11;13679:7;:36::i;:::-;13652:7;:64::i;:::-;13623:93;;13761:26;13790:73;13798:26;13806:17;13798:7;:26::i;:::-;13826:36;13834:14;13850:11;13826:7;:36::i;13790:73::-;13761:102;;13909:25;13937:75;13948:19;13969:20;13991;13937:10;:75::i;:::-;13909:103;;14054:24;14081:73;14089:26;14097:17;14089:7;:26::i;:::-;14117:36;14125:14;14141:11;14117:7;:36::i;14081:73::-;14054:100;;14200:24;14227:64;14235:17;14254:36;14262:14;14278:11;14254:7;:36::i;14227:64::-;14200:91;;14336:23;14362:71;14373:19;14394:18;14414;14362:10;:71::i;:::-;14336:97;;14444:19;14466:61;14477:9;14488:19;14509:17;14466:10;:61::i;:::-;14444:83;;14537:15;14555:29;14570:13;14555:14;:29::i;:::-;14537:47;;14667:21;14681:6;14667:13;:21::i;:::-;14706:6;-1:-1:-1;;;;;;;;;;;;;12870:1849:134;;;;;:::o;98471:204:0:-;98529:28;98550:6;98529:20;:28::i;:::-;98524:82;;98582:13;98593:1;98582:10;:13::i;:::-;98573:22;;98524:82;98630:37;98659:6;98630:12;:37::i;17896:240:134:-;18016:26;;-1:-1:-1;;;18016:26:134;;-1:-1:-1;;;;;15535:55:135;;;18016:26:134;;;15517:74:135;18016:11:134;:16;;;;15490:18:135;;18016:26:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18052:47:134;;-1:-1:-1;;;;;;;;18052:17:134;;18078:11;18052:47;;;:17;:47::i;:::-;18109:11;-1:-1:-1;;;;;18109:18:134;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17896:240;;:::o;18142:179::-;18265:49;;-1:-1:-1;;;18265:49:134;;-1:-1:-1;;;;;31312:55:135;;;18265:49:134;;;31294:74:135;18300:4:134;31384:18:135;;;31377:83;31508:34;31496:47;;31476:18;;;31469:75;18265:11:134;:16;;;;31267:18:135;;18265:49:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18142:179;;:::o;3508:1663:86:-;3953:4;3947:11;-1:-1:-1;;;4094:33:86;;;-1:-1:-1;;;;;4163:66:86;;4156:4;4147:14;;4140:90;-1:-1:-1;;;;;;4299:98:86;;4276:4;4267:14;;4243:168;4483:4;4476;4467:14;;4460:28;3919:2;3909;3891:16;3887:25;3883:34;;;3879:43;4569:4;4565:26;;4558:4;4549:14;;4542:50;4662:16;4655:4;4646:14;;4639:40;3710:21;;4755:16;-1:-1:-1;4745:4:86;4736:14;;4721:51;4869:4;4850:15;4844:4;4840:26;4835:3;4831:36;4824:50;-1:-1:-1;;;;;;5003:17:86;4999:90;4964:15;4958:4;4954:26;4949:3;4945:36;4921:182;5138:15;5132:4;5128:26;5123:3;5116:39;5760:118:63;5827:7;5853:3;:11;;5865:5;5853:18;;;;;;;;:::i;:::-;;;;;;;;;5846:25;;5760:118;;;;:::o;149014:104:0:-;149066:7;149092:19;149102:5;149109:1;149092:9;:19::i;146670:95::-;146717:5;146741:17;146749:5;146756:1;146741:7;:17::i;38579:358::-;38636:5;38658:25;38679:3;38658:20;:25::i;:::-;38653:75;;38705:12;38715:1;38705:9;:12::i;:::-;38699:18;;38653:75;38742:25;38763:3;38742:20;:25::i;:::-;38737:75;;38789:12;38799:1;38789:9;:12::i;:::-;38783:18;;38737:75;38840:89;2843:1:1;38887:3:0;38908;38914:14;38840:11;:89::i;45627:350::-;45680:5;45702:25;45723:3;45702:20;:25::i;:::-;45697:76;;45749:13;45757:4;45749:7;:13::i;:::-;45743:19;;45697:76;45787:25;45808:3;45787:20;:25::i;:::-;45782:76;;45834:13;45842:4;45834:7;:13::i;:::-;45828:19;;45782:76;45886:83;3074:1:1;45929:3:0;45948;45954:14;45886:11;:83::i;117415:229::-;117460:5;117482:28;117503:6;117482:20;:28::i;:::-;117477:83;;117535:14;117543:5;117535:7;:14::i;:::-;117526:23;;117477:83;117588:48;3074:1:1;117628:6:0;117588:8;:48::i;13487:358::-;13544:5;13566:25;13587:3;13566:20;:25::i;:::-;13561:75;;13613:12;13623:1;13613:9;:12::i;:::-;13607:18;;13561:75;13650:25;13671:3;13650:20;:25::i;:::-;13645:75;;13697:12;13707:1;13697:9;:12::i;:::-;13691:18;;13645:75;13748:89;2843:1:1;13795:3:0;13816;13822:14;13748:11;:89::i;110170:477::-;110246:5;110268:28;110289:6;110268:20;:28::i;:::-;110263:83;;110321:14;110329:5;110321:7;:14::i;:::-;110312:23;;110263:83;110360:28;110381:6;110360:20;:28::i;:::-;110355:83;;110413:14;110421:5;110413:7;:14::i;:::-;110404:23;;110355:83;110452:28;110473:6;110452:20;:28::i;:::-;110447:83;;110505:14;110513:5;110505:7;:14::i;:::-;110496:23;;110447:83;110558:81;3074:1:1;110588:6:0;110609;110631;110558:11;:81::i;137224:151::-;137275:8;137316:51;137339:5;2936:1:1;137316:9:0;:51::i;2568:121::-;2626:4;1447:9;;;2649:33;1364:99;150491:107;150544:8;150571:20;150582:5;150589:1;150571:10;:20::i;5117:169::-;5186:71;;-1:-1:-1;;;5186:71:0;;;;;25264:25:135;;;5246:10:0;25305:18:135;;;25298:83;5167:7:0;;874:42;;5186:52;;25237:18:135;;5186:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5274:5:0;;5117:169;-1:-1:-1;;;;5117:169:0:o;149346:204::-;149418:7;149437:10;149450:60;149470:5;2843:1:1;149497:12:0;149450:19;:60::i;147074:271::-;147141:5;;147184:44;;;;-1:-1:-1;147216:1:0;147184:44;147237:10;147250:57;147270:4;3074:1:1;147294:12:0;147250:19;:57::i;4830:281::-;4931:7;874:42;4957:45;5016:10;5028;5040:36;5067:3;5072;5040:26;:36::i;:::-;5078:16;;;5092:1;5078:16;;;;;;;;;-1:-1:-1;;;;;;4957:147:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5645:245::-;5709:7;874:42;5735:45;5794:10;5806:14;5822:33;5849:5;5822:26;:33::i;:::-;5857:16;;;5871:1;5857:16;;;;;;;;;-1:-1:-1;;;;;;5735:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4444:380::-;4560:14;874:42;4597:45;4656:10;4680:17;4711:66;4751:7;4761:6;4769:7;4711:26;:66::i;4185:253::-;4244:7;874:42;4270:45;4329:6;4337:15;4354:31;4381:3;4354:26;:31::i;:::-;4387:34;4414:6;4387:34;;:26;:34::i;:::-;4270:161;;;;;;;;;;;;;;;;;;:::i;150827:208::-;150900:8;150920:10;150933:61;150953:5;2936:1:1;150981:12:0;3812:367;4047:16;;;3903:7;4047:16;;;;;;;;;874:42;;3929:45;;3988:6;;4008:25;;4077:85;4104:5;4111:6;4077:85;;4119:42;4148:12;4119:28;:42::i;:::-;4077:26;:85::i;:::-;3929:243;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3231:240::-;3369:16;;;3383:1;3369:16;;;3315;3369;;;;;3315;3343:23;;3369:16;3383:1;3369:16;;;;;;;;;;-1:-1:-1;3369:16:0;3343:42;;3407:6;3395;3402:1;3395:9;;;;;;;;:::i;:::-;;;;;;:18;;;;;3435:6;3423;3430:1;3423:9;;;;;;;;:::i;:::-;;;;;;;;;;:18;3458:6;3231:240;-1:-1:-1;;;3231:240:0:o;3029:196::-;3151:16;;;3165:1;3151:16;;;;;;;;;3097;;3125:23;;3151:16;;;;;;;;;;;;-1:-1:-1;3151:16:0;3125:42;;3189:6;3177;3184:1;3177:9;;;;;;;;:::i;:::-;;;;;;;;;;:18;3212:6;3029:196;-1:-1:-1;;3029:196:0:o;3477:312::-;3659:16;;;3673:1;3659:16;;;;;;;;;3601;;3633:23;;3659:16;;;;3601;;3659;;;;;-1:-1:-1;3659:16:0;3633:42;;3697:6;3685;3692:1;3685:9;;;;;;;;:::i;:::-;;;;;;:18;;;;;3725:6;3713;3720:1;3713:9;;;;;;;;:::i;:::-;;;;;;:18;;;;;3753:6;3741;3748:1;3741:9;;;;;;;;:::i;:::-;;;;;;;;;;:18;3776:6;3477:312;-1:-1:-1;;;;3477:312:0:o;1150:208::-;1217:7;1248:1;1240:5;:9;;;1236:77;;;1272:30;;-1:-1:-1;;;1272:30:0;;32843:1:135;32832:21;;;1272:30:0;;;32814:40:135;32787:18;;1272:30:0;32672:188:135;1236:77:0;-1:-1:-1;1329:22:0;;;1150:208::o;-1:-1:-1:-;;;;;;;;:::o;14:156:135:-;74:5;119:3;110:6;105:3;101:16;97:26;94:46;;;136:1;133;126:12;94:46;-1:-1:-1;158:6:135;14:156;-1:-1:-1;14:156:135:o;175:118::-;261:5;254:13;247:21;240:5;237:32;227:60;;283:1;280;273:12;298:127;359:10;354:3;350:20;347:1;340:31;390:4;387:1;380:15;414:4;411:1;404:15;430:253;502:2;496:9;544:4;532:17;;579:18;564:34;;600:22;;;561:62;558:88;;;626:18;;:::i;:::-;662:2;655:22;430:253;:::o;688:275::-;759:2;753:9;824:2;805:13;;-1:-1:-1;;801:27:135;789:40;;859:18;844:34;;880:22;;;841:62;838:88;;;906:18;;:::i;:::-;942:2;935:22;688:275;;-1:-1:-1;688:275:135:o;968:156::-;1034:20;;1094:4;1083:16;;1073:27;;1063:55;;1114:1;1111;1104:12;1063:55;968:156;;;:::o;1129:186::-;1177:4;1210:18;1202:6;1199:30;1196:56;;;1232:18;;:::i;:::-;-1:-1:-1;1298:2:135;1277:15;-1:-1:-1;;1273:29:135;1304:4;1269:40;;1129:186::o;1320:972::-;1376:5;1424:4;1412:9;1407:3;1403:19;1399:30;1396:50;;;1442:1;1439;1432:12;1396:50;1464:22;;:::i;:::-;1531:23;;1563:22;;1455:31;-1:-1:-1;1617:36:135;1649:2;1634:18;;1617:36;:::i;:::-;1612:2;1605:5;1601:14;1594:60;1686:36;1718:2;1707:9;1703:18;1686:36;:::i;:::-;1681:2;1674:5;1670:14;1663:60;1774:2;1763:9;1759:18;1746:32;1801:18;1793:6;1790:30;1787:50;;;1833:1;1830;1823:12;1787:50;1856:22;;1909:4;1901:13;;1897:23;-1:-1:-1;1887:51:135;;1934:1;1931;1924:12;1887:51;1974:2;1961:16;1999:52;2015:35;2043:6;2015:35;:::i;:::-;1999:52;:::i;:::-;2074:6;2067:5;2060:21;2122:3;2117:2;2108:6;2104:2;2100:15;2096:24;2093:33;2090:53;;;2139:1;2136;2129:12;2090:53;2194:6;2189:2;2185;2181:11;2176:2;2169:5;2165:14;2152:49;2246:1;2241:2;2232:6;2225:5;2221:18;2217:27;2210:38;2280:5;2275:2;2268:5;2264:14;2257:29;;;;1320:972;;;;:::o;2297:973::-;2471:6;2479;2487;2495;2503;2556:3;2544:9;2535:7;2531:23;2527:33;2524:53;;;2573:1;2570;2563:12;2524:53;2596:54;2642:7;2631:9;2596:54;:::i;:::-;2586:64;;2700:3;2689:9;2685:19;2672:33;2714:28;2736:5;2714:28;:::i;:::-;2761:5;-1:-1:-1;2817:3:135;2802:19;;2789:33;2845:18;2834:30;;2831:50;;;2877:1;2874;2867:12;2831:50;2900:60;2952:7;2943:6;2932:9;2928:22;2900:60;:::i;:::-;2890:70;;;3013:3;3002:9;2998:19;2985:33;3043:18;3033:8;3030:32;3027:52;;;3075:1;3072;3065:12;3027:52;3098:62;3152:7;3141:8;3130:9;3126:24;3098:62;:::i;:::-;2297:973;;;;-1:-1:-1;2297:973:135;;3233:3;3218:19;3205:33;;2297:973;-1:-1:-1;;;2297:973:135:o;3457:154::-;-1:-1:-1;;;;;3536:5:135;3532:54;3525:5;3522:65;3512:93;;3601:1;3598;3591:12;3616:170;3690:5;3735:3;3726:6;3721:3;3717:16;3713:26;3710:46;;;3752:1;3749;3742:12;3791:347;3842:8;3852:6;3906:3;3899:4;3891:6;3887:17;3883:27;3873:55;;3924:1;3921;3914:12;3873:55;-1:-1:-1;3947:20:135;;3990:18;3979:30;;3976:50;;;4022:1;4019;4012:12;3976:50;4059:4;4051:6;4047:17;4035:29;;4111:3;4104:4;4095:6;4087;4083:19;4079:30;4076:39;4073:59;;;4128:1;4125;4118:12;4073:59;3791:347;;;;;:::o;4143:829::-;4310:6;4318;4326;4334;4342;4395:3;4383:9;4374:7;4370:23;4366:33;4363:53;;;4412:1;4409;4402:12;4363:53;4451:9;4438:23;4470:31;4495:5;4470:31;:::i;:::-;4520:5;-1:-1:-1;4544:63:135;4599:7;4594:2;4579:18;;4544:63;:::i;:::-;4534:73;;4626:78;4696:7;4690:3;4679:9;4675:19;4626:78;:::i;:::-;4616:88;;4755:3;4744:9;4740:19;4727:33;4783:18;4775:6;4772:30;4769:50;;;4815:1;4812;4805:12;4769:50;4854:58;4904:7;4895:6;4884:9;4880:22;4854:58;:::i;:::-;4143:829;;;;-1:-1:-1;4143:829:135;;-1:-1:-1;4931:8:135;;4828:84;4143:829;-1:-1:-1;;;4143:829:135:o;5184:158::-;5247:5;5292:2;5283:6;5278:3;5274:16;5270:25;5267:45;;;5308:1;5305;5298:12;5347:807;5503:6;5511;5519;5527;5535;5588:3;5576:9;5567:7;5563:23;5559:33;5556:53;;;5605:1;5602;5595:12;5556:53;5644:9;5631:23;5663:31;5688:5;5663:31;:::i;:::-;5713:5;-1:-1:-1;5737:63:135;5792:7;5787:2;5772:18;;5737:63;:::i;:::-;5727:73;;5819:67;5878:7;5872:3;5861:9;5857:19;5819:67;:::i;:::-;5809:77;;5937:3;5926:9;5922:19;5909:33;5965:18;5957:6;5954:30;5951:50;;;5997:1;5994;5987:12;6557:1139;6810:6;6818;6826;6834;6842;6850;6858;6911:3;6899:9;6890:7;6886:23;6882:33;6879:53;;;6928:1;6925;6918:12;6879:53;6967:9;6954:23;6986:31;7011:5;6986:31;:::i;:::-;7036:5;-1:-1:-1;7060:63:135;7115:7;7110:2;7095:18;;7060:63;:::i;:::-;7050:73;;7142:78;7212:7;7206:3;7195:9;7191:19;7142:78;:::i;:::-;7132:88;-1:-1:-1;7293:3:135;7278:19;;7265:33;;-1:-1:-1;7397:3:135;7382:19;;7369:33;;-1:-1:-1;7479:3:135;7464:19;;7451:33;7507:18;7496:30;;7493:50;;;7539:1;7536;7529:12;7493:50;7578:58;7628:7;7619:6;7608:9;7604:22;7578:58;:::i;:::-;6557:1139;;;;-1:-1:-1;6557:1139:135;;-1:-1:-1;6557:1139:135;;;;7552:84;;-1:-1:-1;;;6557:1139:135:o;8012:160::-;8078:20;;8138:1;8127:20;;;8117:31;;8107:59;;8162:1;8159;8152:12;8177:588;8289:6;8297;8305;8313;8366:3;8354:9;8345:7;8341:23;8337:33;8334:53;;;8383:1;8380;8373:12;8334:53;8422:9;8409:23;8441:31;8466:5;8441:31;:::i;:::-;8491:5;-1:-1:-1;8515:63:135;8570:7;8565:2;8550:18;;8515:63;:::i;:::-;8505:73;;8630:3;8619:9;8615:19;8602:33;8644;8669:7;8644:33;:::i;:::-;8696:7;-1:-1:-1;8722:37:135;8754:3;8739:19;;8722:37;:::i;:::-;8712:47;;8177:588;;;;;;;:::o;8770:240::-;8857:6;8910:3;8898:9;8889:7;8885:23;8881:33;8878:53;;;8927:1;8924;8917:12;8878:53;8950:54;8996:7;8985:9;8950:54;:::i;9015:409::-;9085:6;9093;9146:2;9134:9;9125:7;9121:23;9117:32;9114:52;;;9162:1;9159;9152:12;9114:52;9202:9;9189:23;9235:18;9227:6;9224:30;9221:50;;;9267:1;9264;9257:12;9221:50;9306:58;9356:7;9347:6;9336:9;9332:22;9306:58;:::i;9570:288::-;9611:3;9649:5;9643:12;9676:6;9671:3;9664:19;9732:6;9725:4;9718:5;9714:16;9707:4;9702:3;9698:14;9692:47;9784:1;9777:4;9768:6;9763:3;9759:16;9755:27;9748:38;9847:4;9840:2;9836:7;9831:2;9823:6;9819:15;9815:29;9810:3;9806:39;9802:50;9795:57;;;9570:288;;;;:::o;9863:217::-;10010:2;9999:9;9992:21;9973:4;10030:44;10070:2;10059:9;10055:18;10047:6;10030:44;:::i;10085:226::-;10144:6;10197:2;10185:9;10176:7;10172:23;10168:32;10165:52;;;10213:1;10210;10203:12;10165:52;-1:-1:-1;10258:23:135;;10085:226;-1:-1:-1;10085:226:135:o;10412:127::-;10473:10;10468:3;10464:20;10461:1;10454:31;10504:4;10501:1;10494:15;10528:4;10525:1;10518:15;10544:815;-1:-1:-1;;;;;10964:55:135;;10946:74;;11063:14;;11056:22;11051:2;11036:18;;11029:50;10933:3;10918:19;;11109:1;11098:13;;11088:47;;11115:18;;:::i;:::-;11166:2;11151:18;;11144:34;;;;11209:2;11194:18;;11187:34;;;;11252:3;11237:19;;11230:35;;;;11296:3;11281:19;;11274:35;11340:3;11325:19;;;11318:35;10544:815;;-1:-1:-1;;10544:815:135:o;11364:962::-;11563:6;11571;11579;11587;11595;11603;11656:3;11644:9;11635:7;11631:23;11627:33;11624:53;;;11673:1;11670;11663:12;11624:53;11712:9;11699:23;11731:31;11756:5;11731:31;:::i;:::-;11781:5;-1:-1:-1;11805:63:135;11860:7;11855:2;11840:18;;11805:63;:::i;:::-;11795:73;;11887:67;11946:7;11940:3;11929:9;11925:19;11887:67;:::i;:::-;11877:77;-1:-1:-1;12027:3:135;12012:19;;11999:33;;-1:-1:-1;12109:3:135;12094:19;;12081:33;12137:18;12126:30;;12123:50;;;12169:1;12166;12159:12;12123:50;12208:58;12258:7;12249:6;12238:9;12234:22;12208:58;:::i;:::-;11364:962;;;;-1:-1:-1;11364:962:135;;-1:-1:-1;11364:962:135;;12285:8;;11364:962;-1:-1:-1;;;11364:962:135:o;12623:915::-;12757:6;12765;12773;12781;12789;12797;12850:3;12838:9;12829:7;12825:23;12821:33;12818:53;;;12867:1;12864;12857:12;12818:53;12906:9;12893:23;12925:31;12950:5;12925:31;:::i;:::-;12975:5;-1:-1:-1;12999:63:135;13054:7;13049:2;13034:18;;12999:63;:::i;:::-;12989:73;-1:-1:-1;13135:3:135;13120:19;;13107:33;;-1:-1:-1;13239:3:135;13224:19;;13211:33;;-1:-1:-1;13321:3:135;13306:19;;13293:33;13349:18;13338:30;;13335:50;;;13381:1;13378;13371:12;13543:1801;13766:13;;10386;10379:21;10367:34;;13737:3;13722:19;;13838:4;13830:6;13826:17;13820:24;13853:51;13898:4;13887:9;13883:20;13869:12;10386:13;10379:21;10367:34;;10316:91;13853:51;;13953:4;13945:6;13941:17;13935:24;13968:53;14015:4;14004:9;14000:20;13984:14;10386:13;10379:21;10367:34;;10316:91;13968:53;;14070:4;14062:6;14058:17;14052:24;14085:53;14132:4;14121:9;14117:20;14101:14;10386:13;10379:21;10367:34;;10316:91;14085:53;;14187:4;14179:6;14175:17;14169:24;14202:53;14249:4;14238:9;14234:20;14218:14;10386:13;10379:21;10367:34;;10316:91;14202:53;;14304:4;14296:6;14292:17;14286:24;14319:53;14366:4;14355:9;14351:20;14335:14;10386:13;10379:21;10367:34;;10316:91;14319:53;;14421:4;14413:6;14409:17;14403:24;14436:53;14483:4;14472:9;14468:20;14452:14;10386:13;10379:21;10367:34;;10316:91;14436:53;;14538:4;14530:6;14526:17;14520:24;14553:53;14600:4;14589:9;14585:20;14569:14;10386:13;10379:21;10367:34;;10316:91;14553:53;;14655:6;14647;14643:19;14637:26;14672:55;14719:6;14708:9;14704:22;14688:14;10386:13;10379:21;10367:34;;10316:91;14672:55;;14776:6;14768;14764:19;14758:26;14793:55;14840:6;14829:9;14825:22;14809:14;10386:13;10379:21;10367:34;;10316:91;14793:55;;14897:6;14889;14885:19;14879:26;14914:55;14961:6;14950:9;14946:22;14930:14;10386:13;10379:21;10367:34;;10316:91;14914:55;;15019:6;15011;15007:19;15001:26;15036:56;15084:6;15073:9;15069:22;15052:15;10386:13;10379:21;10367:34;;10316:91;15036:56;;15142:6;15134;15130:19;15124:26;15159:56;15207:6;15196:9;15192:22;15175:15;10386:13;10379:21;10367:34;;10316:91;15159:56;;15265:6;15257;15253:19;15247:26;15282:56;15330:6;15319:9;15315:22;15298:15;10386:13;10379:21;10367:34;;10316:91;15602:517;15707:6;15715;15723;15776:3;15764:9;15755:7;15751:23;15747:33;15744:53;;;15793:1;15790;15783:12;15744:53;15832:9;15819:23;15851:31;15876:5;15851:31;:::i;:::-;15901:5;-1:-1:-1;15925:63:135;15980:7;15975:2;15960:18;;15925:63;:::i;:::-;15915:73;;16040:3;16029:9;16025:19;16012:33;16054;16079:7;16054:33;:::i;:::-;16106:7;16096:17;;;15602:517;;;;;:::o;16530:714::-;16671:6;16679;16687;16695;16748:3;16736:9;16727:7;16723:23;16719:33;16716:53;;;16765:1;16762;16755:12;16716:53;16788:54;16834:7;16823:9;16788:54;:::i;:::-;16778:64;-1:-1:-1;16911:3:135;16896:19;;16883:33;;-1:-1:-1;16991:3:135;16976:19;;16963:33;17019:18;17008:30;;17005:50;;;17051:1;17048;17041:12;17005:50;17074:60;17126:7;17117:6;17106:9;17102:22;17074:60;:::i;:::-;16530:714;;;;-1:-1:-1;17064:70:135;;17207:3;17192:19;17179:33;;-1:-1:-1;;;16530:714:135:o;17249:161::-;17316:20;;17376:8;17365:20;;17355:31;;17345:59;;17400:1;17397;17390:12;17415:986;17500:6;17560:3;17548:9;17539:7;17535:23;17531:33;17576:2;17573:22;;;17591:1;17588;17581:12;17573:22;-1:-1:-1;17660:2:135;17654:9;17702:3;17690:16;;17736:18;17721:34;;17757:22;;;17718:62;17715:88;;;17783:18;;:::i;:::-;17819:2;17812:22;17856:23;;17888:31;17856:23;17888:31;:::i;:::-;17928:21;;18001:2;17986:18;;17973:32;18014:33;17973:32;18014:33;:::i;:::-;18075:2;18063:15;;18056:32;18121:37;18154:2;18139:18;;18121:37;:::i;:::-;18116:2;18108:6;18104:15;18097:62;18192:36;18224:2;18213:9;18209:18;18192:36;:::i;:::-;18187:2;18179:6;18175:15;18168:61;18281:3;18270:9;18266:19;18253:33;18295;18320:7;18295:33;:::i;:::-;18356:3;18344:16;;18337:33;18348:6;17415:986;-1:-1:-1;;;17415:986:135:o;18934:277::-;19023:6;19076:2;19064:9;19055:7;19051:23;19047:32;19044:52;;;19092:1;19089;19082:12;19044:52;19131:9;19118:23;19150:31;19175:5;19150:31;:::i;19998:245::-;20065:6;20118:2;20106:9;20097:7;20093:23;20089:32;20086:52;;;20134:1;20131;20124:12;20086:52;20166:9;20160:16;20185:28;20207:5;20185:28;:::i;20248:127::-;20309:10;20304:3;20300:20;20297:1;20290:31;20340:4;20337:1;20330:15;20364:4;20361:1;20354:15;20380:135;20419:3;20440:17;;;20437:43;;20460:18;;:::i;:::-;-1:-1:-1;20507:1:135;20496:13;;20380:135::o;20520:230::-;20590:6;20643:2;20631:9;20622:7;20618:23;20614:32;20611:52;;;20659:1;20656;20649:12;20611:52;-1:-1:-1;20704:16:135;;20520:230;-1:-1:-1;20520:230:135:o;20755:925::-;20943:3;20928:19;;20969:20;;20998:31;20969:20;20998:31;:::i;:::-;-1:-1:-1;;;;;21056:54:135;21038:73;;21160:4;21148:17;;21135:31;21175:33;21135:31;21175:33;:::i;:::-;-1:-1:-1;;;;;21246:56:135;21239:4;21224:20;;21217:86;21383:8;21345:36;21375:4;21363:17;;21345:36;:::i;:::-;21341:51;21334:4;21323:9;21319:20;21312:81;21445:35;21474:4;21466:6;21462:17;21445:35;:::i;:::-;21442:1;21431:50;21424:4;21413:9;21409:20;21402:80;21531:4;21523:6;21519:17;21506:31;21546:33;21571:7;21546:33;:::i;:::-;-1:-1:-1;;;;;21621:7:135;21617:56;21610:4;21599:9;21595:20;21588:86;;20755:925;;;;:::o;21685:685::-;21764:6;21817:2;21805:9;21796:7;21792:23;21788:32;21785:52;;;21833:1;21830;21823:12;21785:52;21866:9;21860:16;21899:18;21891:6;21888:30;21885:50;;;21931:1;21928;21921:12;21885:50;21954:22;;22007:4;21999:13;;21995:27;-1:-1:-1;21985:55:135;;22036:1;22033;22026:12;21985:55;22069:2;22063:9;22094:52;22110:35;22138:6;22110:35;:::i;22094:52::-;22169:6;22162:5;22155:21;22217:7;22212:2;22203:6;22199:2;22195:15;22191:24;22188:37;22185:57;;;22238:1;22235;22228:12;22185:57;22286:6;22281:2;22277;22273:11;22268:2;22261:5;22257:14;22251:42;22338:1;22313:18;;;22333:2;22309:27;22302:38;;;;22317:5;21685:685;-1:-1:-1;;;;21685:685:135:o;23407:125::-;23472:9;;;23493:10;;;23490:36;;;23506:18;;:::i;23887:136::-;23922:3;-1:-1:-1;;;23943:22:135;;23940:48;;23968:18;;:::i;:::-;-1:-1:-1;24008:1:135;24004:13;;23887:136::o;24388:128::-;24455:9;;;24476:11;;;24473:37;;;24490:18;;:::i;25654:681::-;25877:2;25866:9;25859:21;25922:6;25916:13;25911:2;25900:9;25896:18;25889:41;25996:4;25988;25980:6;25976:17;25970:24;25966:35;25961:2;25950:9;25946:18;25939:63;26068:4;26062:2;26054:6;26050:15;26044:22;26040:33;26033:4;26022:9;26018:20;26011:63;25840:4;26121:2;26113:6;26109:15;26103:22;26162:4;26156:3;26145:9;26141:19;26134:33;26184:51;26230:3;26219:9;26215:19;26201:12;26184:51;:::i;:::-;26176:59;;;-1:-1:-1;;;;;26277:6:135;26273:55;26266:4;26255:9;26251:20;26244:85;25654:681;;;;;:::o;26340:267::-;-1:-1:-1;;;;;26463:50:135;;;26411;;;26407:107;;26526:52;;26523:78;;;26581:18;;:::i;26612:264::-;-1:-1:-1;;;;;26681:50:135;;;26733;;;26677:107;;26796:51;;26793:77;;;26850:18;;:::i;28005:127::-;28066:10;28061:3;28057:20;28054:1;28047:31;28097:4;28094:1;28087:15;28121:4;28118:1;28111:15;28137:127;28198:10;28193:3;28189:20;28186:1;28179:31;28229:4;28226:1;28219:15;28253:4;28250:1;28243:15;28269:358;28345:6;28353;28406:2;28394:9;28385:7;28381:23;28377:32;28374:52;;;28422:1;28419;28412:12;28374:52;28467:16;;28552:2;28537:18;;28531:25;28467:16;;-1:-1:-1;28565:30:135;28531:25;28565:30;:::i;:::-;28614:7;28604:17;;;28269:358;;;;;:::o;28909:995::-;-1:-1:-1;;;;;29286:6:135;29280:13;29276:62;29265:9;29258:81;-1:-1:-1;;;;;29399:4:135;29391:6;29387:17;29381:24;29377:73;29370:4;29359:9;29355:20;29348:103;29519:8;29511:4;29503:6;29499:17;29493:24;29489:39;29482:4;29471:9;29467:20;29460:69;29599:4;29591:6;29587:17;29581:24;29578:1;29567:39;29560:4;29549:9;29545:20;29538:69;-1:-1:-1;;;;;29667:4:135;29659:6;29655:17;29649:24;29645:73;29638:4;29627:9;29623:20;29616:103;29728:57;29780:3;29769:9;29765:19;29757:6;28722:12;;28715:20;28708:28;28696:41;;28786:4;28775:16;;;28769:23;28753:14;;;28746:47;28846:4;28835:16;;;28829:23;-1:-1:-1;;;;;28825:72:135;28809:14;;28802:96;28632:272;29728:57;29822:3;29816;29805:9;29801:19;29794:32;29239:4;29843:55;29893:3;29882:9;29878:19;9519:1;9507:14;;9554:4;9545:14;;9429:136;30132:213;30167:3;30215:5;30211:2;30200:21;30249:34;30245:39;30236:7;30233:52;30230:78;;30288:18;;:::i;:::-;30328:1;30324:15;;30132:213;-1:-1:-1;;30132:213:135:o;30602:194::-;30698:1;30669:16;;;30687;;;;30665:39;30754:10;30719:20;;-1:-1:-1;;30741:25:135;;30716:51;30713:77;;;30770:18;;:::i;31555:420::-;31608:3;31646:5;31640:12;31673:6;31668:3;31661:19;31705:4;31700:3;31696:14;31689:21;;31744:4;31737:5;31733:16;31767:1;31777:173;31791:6;31788:1;31785:13;31777:173;;;31852:13;;31840:26;;31895:4;31886:14;;;;31923:17;;;;31813:1;31806:9;31777:173;;31980:687;32315:4;32307:6;32303:17;32292:9;32285:36;32266:4;32351:2;32343:6;32340:14;32330:48;;32358:18;;:::i;:::-;32414:6;32409:2;32398:9;32394:18;32387:34;32457:3;32452:2;32441:9;32437:18;32430:31;32484:57;32536:3;32525:9;32521:19;32513:6;32484:57;:::i;:::-;32589:9;32581:6;32577:22;32572:2;32561:9;32557:18;32550:50;32617:44;32654:6;32646;32617:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "93284": [
        { "start": 1087, "length": 32 },
        { "start": 1972, "length": 32 },
        { "start": 2071, "length": 32 },
        { "start": 2176, "length": 32 },
        { "start": 2281, "length": 32 },
        { "start": 2543, "length": 32 },
        { "start": 2665, "length": 32 },
        { "start": 2769, "length": 32 },
        { "start": 2866, "length": 32 },
        { "start": 3061, "length": 32 },
        { "start": 5516, "length": 32 },
        { "start": 8024, "length": 32 },
        { "start": 8901, "length": 32 },
        { "start": 9004, "length": 32 },
        { "start": 9061, "length": 32 },
        { "start": 9254, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
    "editOrder((address,address,uint24,int24,address),uint256,(uint256,uint8,uint8,bytes),int256)": "f465bcae",
    "flushOrder((address,address,uint24,int24,address))": "ccab9d8a",
    "getHookPermissions()": "c4e833ce",
    "getQueueLength((address,address,uint24,int24,address))": "74ecdb9f",
    "lastTicks(bytes32)": "e4cbfea5",
    "nextOrderId()": "2a58b330",
    "orders(uint256)": "a85c38ef",
    "placeOrder((address,address,uint24,int24,address),bool,(uint256,uint8,uint8,bytes),(uint256,uint8,uint8,bytes),uint256)": "042c3a8e",
    "poolManager()": "dc4c90d3",
    "unlockCallback(bytes)": "91dd7346"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"got\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"expected\",\"type\":\"uint8\"}],\"name\":\"InvalidEncryptedInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int32\",\"name\":\"value\",\"type\":\"int32\"}],\"name\":\"SecurityZoneOutOfBounds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"euint128\",\"name\":\"conditionHandle\",\"type\":\"uint256\"}],\"name\":\"DecryptionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"keyId\",\"type\":\"bytes32\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"euint32\",\"name\":\"newTriggerTick\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"keyId\",\"type\":\"bytes32\"}],\"name\":\"OrderEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"executedTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"keyId\",\"type\":\"bytes32\"}],\"name\":\"OrderExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"euint32\",\"name\":\"triggerTick\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"ebool\",\"name\":\"orderType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"keyId\",\"type\":\"bytes32\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ctHash\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"securityZone\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"utype\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct InEuint32\",\"name\":\"inNewTriggerTick\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"amountDelta\",\"type\":\"int256\"}],\"name\":\"editOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"flushOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"getQueueLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lastTicks\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"enum Susanoo.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"ebool\",\"name\":\"orderType\",\"type\":\"uint256\"},{\"internalType\":\"euint32\",\"name\":\"triggerTick\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"PoolId\",\"name\":\"keyId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ctHash\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"securityZone\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"utype\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct InEuint32\",\"name\":\"inTriggerTick\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ctHash\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"securityZone\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"utype\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct InEbool\",\"name\":\"inOrderType\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\",\"returns\":{\"_0\":\"Permissions struct\"}},\"getQueueLength((address,address,uint24,int24,address))\":{\"details\":\"Get queue length for a specific pool (for monitoring)\"},\"unlockCallback(bytes)\":{\"details\":\"Callback function called when pool manager lock is acquired\",\"params\":{\"data\":\"Encoded PoolKey data\"},\"returns\":{\"_0\":\"Empty bytes as no return data needed\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Susanoo.sol\":\"Susanoo\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@fhenixprotocol/cofhe-contracts/=lib/cofhe-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":cofhe-contracts/=lib/cofhe-contracts/contracts/\",\":cofhe-mock-contracts/=lib/cofhe-mock-contracts/contracts/\",\":ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/permit2/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/cofhe-contracts/contracts/FHE.sol\":{\"keccak256\":\"0x3e2fc4d524d3f8139895114b97794f64df099da5b00179c37b21a2da6ef82b34\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://87584345810636b3def0fd08ecd62c733b6dd9225e87a0623cb49ab9dbbf5a28\",\"dweb:/ipfs/QmbFHYvLodiEBnhanJvN14Cc2Ej5oZ4wMLcK99ZPBd6FW1\"]},\"lib/cofhe-contracts/contracts/ICofhe.sol\":{\"keccak256\":\"0xa79f6cd060e362ab5e4bda4011f11982f5025e5c92e904dd9c2389b535720e4e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2066e8e74a4fa96e75302512db3b8353f8acb57a31a25f3628c669a762509879\",\"dweb:/ipfs/QmbqbjCGAWQz6dZUoAxPCZ8ynVuwpV4LPvCwhHXgQS3gdm\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xa667ad942f67a3a72830ba2db2556b22c94a0d0e7b934cb1af19dbb52c701011\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a04504e81403d9f3c45593e0e29f928ff93fbcd11ea961aa8cbd96b05f80aa6e\",\"dweb:/ipfs/QmZtHcvctLMa4Ap1ayqq1kyKt8EN5Ni2851daEdjNNYacG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"lib/openzeppelin-contracts/contracts/utils/Bytes.sol\":{\"keccak256\":\"0xb363f660b3fe0d3aacceff1cab8ef825045bbd85b2f6bce0ffc87f05bb9e5708\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59d5d6d07405d49fca24017da36ea42de525ddb80541efb5dd0b9f0352c11ad7\",\"dweb:/ipfs/QmR2hUnWKwhzdwYF9EZUqVVdLHMwqxZSN7haJ4mgetVcSs\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x4adeafe83d2adc5841d039a47ed53e774a48f086a3056eae9067b5881810cd1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fe8dff5b18d1bd415afa9beea101bf5225cb8f47a140f621b5f805d0dc3f1b9\",\"dweb:/ipfs/QmR6TjUsHbp9wj5tzfjRDG8tXRwyrzQSHv446PYi6X5z2G\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0xf29c74dea19eecfdfce357c3237a2e2fde10d0299003f1173130393b7dcd13e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce98dc8bd26ea17fa1b82e6753b49930835d07659a357d4eedf03fbbbf53d629\",\"dweb:/ipfs/QmbLWchYvq74wwzV3T76dXDPuKD22JwU9gvsUensvUUYyq\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xc9f12663fcbc9f659610597f760a7b7258ac9e510419bdc68471eebe2ae56d4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa8da3fd6dcec1e0a9348d296e2711f311285bcc3a574e5abefcf0f36c53893f\",\"dweb:/ipfs/QmPjf7gDHoUvgY9CdpnStpTuynAg4mFAAWotbT64EzmARy\"]},\"lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol\":{\"keccak256\":\"0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de\",\"dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x947aadb127ce0a07acc4e04c3a6fb99d5f484421e91090942e74e5ce88ac6dd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef4fb852b15ca2610e24983fa352ae70e7be9a41365427770a3be60f422ffe8\",\"dweb:/ipfs/QmWhb3iVqZ7o6tD1fn58b4j5nYu4JjnvvVib2xRnUNurHs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x1e1d74658d7f4eab3d4f8fb0c6c5953bc5f629d9425e978d557dabff7b58b217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be0175d00008d452d3d553890f73a3d5d51dff4372f720336c8b98f26822fcdb\",\"dweb:/ipfs/QmUkE8g5xPExWoSAKwdi5ww1qJJVtEWtjSF93G2LMQkgD3\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"lib/permit2/lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb\",\"dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb\",\"dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99\",\"dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/StateLibrary.sol\":{\"keccak256\":\"0x96db333ee126a841dd959e38e452cc59d73583cb0437a1d48b2052e33a74f952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8672bba1eb69608299b0904f4ff305238eb18479d371c26518f278c9ee184cd0\",\"dweb:/ipfs/QmTLu3s6ECvsEDHStQv8HTVHYtvkviBbdjPrFJd4SpVRFY\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"lib/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"lib/v4-periphery/src/utils/BaseHook.sol\":{\"keccak256\":\"0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3\",\"dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra\"]},\"src/Queue.sol\":{\"keccak256\":\"0xb89a6f0c28d176a29308672eadadc672c795eb9079320730a7d024f46ce78cc8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ffee94028f12e2a3bfb5845cbc65fb94c314e564f6d65bf1ab4d9e3487ed1ac0\",\"dweb:/ipfs/QmYdFcMUZB3ikQ538p3sF6mjNBPiYtsUEaB9D7tDuBPfFm\"]},\"src/Susanoo.sol\":{\"keccak256\":\"0x02ecaeed20523c0b8e8b6420574d2899dae18aab05adf01d6edde98bbbcb3477\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eea25bf2fe5d1ed09d11a202d34f5141003bc8fdcce515a75dd2c6df9ab189ba\",\"dweb:/ipfs/QmRneVMkrtRVKrGn5kXFRbhw5iJXRK2KPYfP4siDPo99SD\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "_poolManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "HookNotImplemented" },
        {
          "inputs": [
            { "internalType": "uint8", "name": "got", "type": "uint8" },
            { "internalType": "uint8", "name": "expected", "type": "uint8" }
          ],
          "type": "error",
          "name": "InvalidEncryptedInput"
        },
        { "inputs": [], "type": "error", "name": "NotPoolManager" },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "int32", "name": "value", "type": "int32" }
          ],
          "type": "error",
          "name": "SecurityZoneOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "euint128",
              "name": "conditionHandle",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DecryptionRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "PoolId",
              "name": "keyId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderCancelled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "euint32",
              "name": "newTriggerTick",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "PoolId",
              "name": "keyId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderEdited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "executedTick",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "PoolId",
              "name": "keyId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "euint32",
              "name": "triggerTick",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "ebool",
              "name": "orderType",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "PoolId",
              "name": "keyId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OrderPlaced",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                { "internalType": "bytes32", "name": "salt", "type": "bytes32" }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "delta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "feesAccrued",
              "type": "int256"
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterAddLiquidity",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" },
            { "internalType": "BalanceDelta", "name": "", "type": "int256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            { "internalType": "uint256", "name": "amount0", "type": "uint256" },
            { "internalType": "uint256", "name": "amount1", "type": "uint256" },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterDonate",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            },
            { "internalType": "int24", "name": "tick", "type": "int24" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterInitialize",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                { "internalType": "bytes32", "name": "salt", "type": "bytes32" }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "delta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "feesAccrued",
              "type": "int256"
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterRemoveLiquidity",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" },
            { "internalType": "BalanceDelta", "name": "", "type": "int256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct SwapParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "delta",
              "type": "int256"
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterSwap",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" },
            { "internalType": "int128", "name": "", "type": "int128" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                { "internalType": "bytes32", "name": "salt", "type": "bytes32" }
              ]
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeAddLiquidity",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            { "internalType": "uint256", "name": "amount0", "type": "uint256" },
            { "internalType": "uint256", "name": "amount1", "type": "uint256" },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeDonate",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeInitialize",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                { "internalType": "bytes32", "name": "salt", "type": "bytes32" }
              ]
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeRemoveLiquidity",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct SwapParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            { "internalType": "bytes", "name": "hookData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeSwap",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" },
            { "internalType": "BeforeSwapDelta", "name": "", "type": "int256" },
            { "internalType": "uint24", "name": "", "type": "uint24" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            { "internalType": "uint256", "name": "orderId", "type": "uint256" },
            {
              "internalType": "struct InEuint32",
              "name": "inNewTriggerTick",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "ctHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "securityZone",
                  "type": "uint8"
                },
                { "internalType": "uint8", "name": "utype", "type": "uint8" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "int256",
              "name": "amountDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "editOrder"
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flushOrder"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getHookPermissions",
          "outputs": [
            {
              "internalType": "struct Hooks.Permissions",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "beforeInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeAddLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterAddLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeRemoveLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterRemoveLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeSwap",
                  "type": "bool"
                },
                { "internalType": "bool", "name": "afterSwap", "type": "bool" },
                {
                  "internalType": "bool",
                  "name": "beforeDonate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterDonate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeSwapReturnDelta",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterSwapReturnDelta",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterAddLiquidityReturnDelta",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterRemoveLiquidityReturnDelta",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQueueLength",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "PoolId", "name": "", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastTicks",
          "outputs": [{ "internalType": "int24", "name": "", "type": "int24" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextOrderId",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "orders",
          "outputs": [
            { "internalType": "address", "name": "trader", "type": "address" },
            { "internalType": "bool", "name": "zeroForOne", "type": "bool" },
            {
              "internalType": "enum Susanoo.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            { "internalType": "ebool", "name": "orderType", "type": "uint256" },
            {
              "internalType": "euint32",
              "name": "triggerTick",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "PoolId", "name": "keyId", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                { "internalType": "uint24", "name": "fee", "type": "uint24" },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            { "internalType": "bool", "name": "zeroForOne", "type": "bool" },
            {
              "internalType": "struct InEuint32",
              "name": "inTriggerTick",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "ctHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "securityZone",
                  "type": "uint8"
                },
                { "internalType": "uint8", "name": "utype", "type": "uint8" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct InEbool",
              "name": "inOrderType",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "ctHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "securityZone",
                  "type": "uint8"
                },
                { "internalType": "uint8", "name": "utype", "type": "uint8" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "placeOrder",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolManager",
          "outputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockCallback",
          "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "params": {
              "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
              "feesAccrued": "The fees accrued since the last time fees were collected from this position",
              "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
              "key": "The key for the pool",
              "params": "The parameters for adding liquidity",
              "sender": "The initial msg.sender for the add liquidity call"
            },
            "returns": {
              "_0": "bytes4 The function selector for the hook",
              "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
            }
          },
          "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "params": {
              "amount0": "The amount of token0 being donated",
              "amount1": "The amount of token1 being donated",
              "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
              "key": "The key for the pool",
              "sender": "The initial msg.sender for the donate call"
            },
            "returns": { "_0": "bytes4 The function selector for the hook" }
          },
          "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
            "params": {
              "key": "The key for the pool being initialized",
              "sender": "The initial msg.sender for the initialize call",
              "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
              "tick": "The current tick after the state of a pool is initialized"
            },
            "returns": { "_0": "bytes4 The function selector for the hook" }
          },
          "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "params": {
              "delta": "The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta",
              "feesAccrued": "The fees accrued since the last time fees were collected from this position",
              "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
              "key": "The key for the pool",
              "params": "The parameters for removing liquidity",
              "sender": "The initial msg.sender for the remove liquidity call"
            },
            "returns": {
              "_0": "bytes4 The function selector for the hook",
              "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
            }
          },
          "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
            "params": {
              "delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
              "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
              "key": "The key for the pool",
              "params": "The parameters for the swap",
              "sender": "The initial msg.sender for the swap call"
            },
            "returns": {
              "_0": "bytes4 The function selector for the hook",
              "_1": "int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
            }
          },
          "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "params": {
              "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
              "key": "The key for the pool",
              "params": "The parameters for adding liquidity",
              "sender": "The initial msg.sender for the add liquidity call"
            },
            "returns": { "_0": "bytes4 The function selector for the hook" }
          },
          "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "params": {
              "amount0": "The amount of token0 being donated",
              "amount1": "The amount of token1 being donated",
              "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
              "key": "The key for the pool",
              "sender": "The initial msg.sender for the donate call"
            },
            "returns": { "_0": "bytes4 The function selector for the hook" }
          },
          "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
            "params": {
              "key": "The key for the pool being initialized",
              "sender": "The initial msg.sender for the initialize call",
              "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
            },
            "returns": { "_0": "bytes4 The function selector for the hook" }
          },
          "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "params": {
              "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
              "key": "The key for the pool",
              "params": "The parameters for removing liquidity",
              "sender": "The initial msg.sender for the remove liquidity call"
            },
            "returns": { "_0": "bytes4 The function selector for the hook" }
          },
          "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "params": {
              "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
              "key": "The key for the pool",
              "params": "The parameters for the swap",
              "sender": "The initial msg.sender for the swap call"
            },
            "returns": {
              "_0": "bytes4 The function selector for the hook",
              "_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
              "_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
            }
          },
          "getHookPermissions()": {
            "details": "Used at deployment to validate the address correctly represents the expected permissions",
            "returns": { "_0": "Permissions struct" }
          },
          "getQueueLength((address,address,uint24,int24,address))": {
            "details": "Get queue length for a specific pool (for monitoring)"
          },
          "unlockCallback(bytes)": {
            "details": "Callback function called when pool manager lock is acquired",
            "params": { "data": "Encoded PoolKey data" },
            "returns": { "_0": "Empty bytes as no return data needed" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "notice": "The hook called after liquidity is added"
          },
          "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "The hook called after donate"
          },
          "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
            "notice": "The hook called after the state of a pool is initialized"
          },
          "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "notice": "The hook called after liquidity is removed"
          },
          "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
            "notice": "The hook called after a swap"
          },
          "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "The hook called before liquidity is added"
          },
          "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "The hook called before donate"
          },
          "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
            "notice": "The hook called before the state of a pool is initialized"
          },
          "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "The hook called before liquidity is removed"
          },
          "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "notice": "The hook called before a swap"
          },
          "getHookPermissions()": {
            "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
          },
          "poolManager()": { "notice": "The Uniswap v4 PoolManager contract" }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
        "@fhenixprotocol/cofhe-contracts/=lib/cofhe-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
        "cofhe-contracts/=lib/cofhe-contracts/contracts/",
        "cofhe-mock-contracts/=lib/cofhe-mock-contracts/contracts/",
        "ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "hardhat/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "permit2/=lib/permit2/",
        "solmate/=lib/permit2/lib/solmate/",
        "v4-core/=lib/v4-periphery/lib/v4-core/src/",
        "v4-periphery/=lib/v4-periphery/"
      ],
      "optimizer": { "enabled": true, "runs": 800 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Susanoo.sol": "Susanoo" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/cofhe-contracts/contracts/FHE.sol": {
        "keccak256": "0x3e2fc4d524d3f8139895114b97794f64df099da5b00179c37b21a2da6ef82b34",
        "urls": [
          "bzz-raw://87584345810636b3def0fd08ecd62c733b6dd9225e87a0623cb49ab9dbbf5a28",
          "dweb:/ipfs/QmbFHYvLodiEBnhanJvN14Cc2Ej5oZ4wMLcK99ZPBd6FW1"
        ],
        "license": "BSD-3-Clause-Clear"
      },
      "lib/cofhe-contracts/contracts/ICofhe.sol": {
        "keccak256": "0xa79f6cd060e362ab5e4bda4011f11982f5025e5c92e904dd9c2389b535720e4e",
        "urls": [
          "bzz-raw://2066e8e74a4fa96e75302512db3b8353f8acb57a31a25f3628c669a762509879",
          "dweb:/ipfs/QmbqbjCGAWQz6dZUoAxPCZ8ynVuwpV4LPvCwhHXgQS3gdm"
        ],
        "license": "UNLICENSED"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xa667ad942f67a3a72830ba2db2556b22c94a0d0e7b934cb1af19dbb52c701011",
        "urls": [
          "bzz-raw://a04504e81403d9f3c45593e0e29f928ff93fbcd11ea961aa8cbd96b05f80aa6e",
          "dweb:/ipfs/QmZtHcvctLMa4Ap1ayqq1kyKt8EN5Ni2851daEdjNNYacG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68",
        "urls": [
          "bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048",
          "dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09",
        "urls": [
          "bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840",
          "dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620",
        "urls": [
          "bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8",
          "dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa",
        "urls": [
          "bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63",
          "dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Utils.sol": {
        "keccak256": "0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1",
        "urls": [
          "bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5",
          "dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e",
        "urls": [
          "bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d",
          "dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Bytes.sol": {
        "keccak256": "0xb363f660b3fe0d3aacceff1cab8ef825045bbd85b2f6bce0ffc87f05bb9e5708",
        "urls": [
          "bzz-raw://59d5d6d07405d49fca24017da36ea42de525ddb80541efb5dd0b9f0352c11ad7",
          "dweb:/ipfs/QmR2hUnWKwhzdwYF9EZUqVVdLHMwqxZSN7haJ4mgetVcSs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x4adeafe83d2adc5841d039a47ed53e774a48f086a3056eae9067b5881810cd1f",
        "urls": [
          "bzz-raw://9fe8dff5b18d1bd415afa9beea101bf5225cb8f47a140f621b5f805d0dc3f1b9",
          "dweb:/ipfs/QmR6TjUsHbp9wj5tzfjRDG8tXRwyrzQSHv446PYi6X5z2G"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuardTransient.sol": {
        "keccak256": "0xf29c74dea19eecfdfce357c3237a2e2fde10d0299003f1173130393b7dcd13e8",
        "urls": [
          "bzz-raw://ce98dc8bd26ea17fa1b82e6753b49930835d07659a357d4eedf03fbbbf53d629",
          "dweb:/ipfs/QmbLWchYvq74wwzV3T76dXDPuKD22JwU9gvsUensvUUYyq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xc9f12663fcbc9f659610597f760a7b7258ac9e510419bdc68471eebe2ae56d4f",
        "urls": [
          "bzz-raw://fa8da3fd6dcec1e0a9348d296e2711f311285bcc3a574e5abefcf0f36c53893f",
          "dweb:/ipfs/QmPjf7gDHoUvgY9CdpnStpTuynAg4mFAAWotbT64EzmARy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/TransientSlot.sol": {
        "keccak256": "0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946",
        "urls": [
          "bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de",
          "dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e",
        "urls": [
          "bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377",
          "dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
        "urls": [
          "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
          "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x947aadb127ce0a07acc4e04c3a6fb99d5f484421e91090942e74e5ce88ac6dd2",
        "urls": [
          "bzz-raw://0ef4fb852b15ca2610e24983fa352ae70e7be9a41365427770a3be60f422ffe8",
          "dweb:/ipfs/QmWhb3iVqZ7o6tD1fn58b4j5nYu4JjnvvVib2xRnUNurHs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0x1e1d74658d7f4eab3d4f8fb0c6c5953bc5f629d9425e978d557dabff7b58b217",
        "urls": [
          "bzz-raw://be0175d00008d452d3d553890f73a3d5d51dff4372f720336c8b98f26822fcdb",
          "dweb:/ipfs/QmUkE8g5xPExWoSAKwdi5ww1qJJVtEWtjSF93G2LMQkgD3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77",
        "urls": [
          "bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b",
          "dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"
        ],
        "license": "MIT"
      },
      "lib/permit2/lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
        "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
        "urls": [
          "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
          "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
        "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
        "urls": [
          "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
          "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
        "keccak256": "0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d",
        "urls": [
          "bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec",
          "dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
        "keccak256": "0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e",
        "urls": [
          "bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4",
          "dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
        "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
        "urls": [
          "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
          "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
        "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
        "urls": [
          "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
          "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
        "urls": [
          "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
          "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
        "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
        "urls": [
          "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
          "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/BitMath.sol": {
        "keccak256": "0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d",
        "urls": [
          "bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e",
          "dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
        "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
        "urls": [
          "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
          "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint128.sol": {
        "keccak256": "0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542",
        "urls": [
          "bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb",
          "dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol": {
        "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
        "urls": [
          "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
          "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
        "keccak256": "0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa",
        "urls": [
          "bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb",
          "dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
        "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
        "urls": [
          "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
          "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/LiquidityMath.sol": {
        "keccak256": "0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353",
        "urls": [
          "bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99",
          "dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
        "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
        "urls": [
          "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
          "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/Position.sol": {
        "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
        "urls": [
          "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
          "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
        "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
        "urls": [
          "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
          "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/StateLibrary.sol": {
        "keccak256": "0x96db333ee126a841dd959e38e452cc59d73583cb0437a1d48b2052e33a74f952",
        "urls": [
          "bzz-raw://8672bba1eb69608299b0904f4ff305238eb18479d371c26518f278c9ee184cd0",
          "dweb:/ipfs/QmTLu3s6ECvsEDHStQv8HTVHYtvkviBbdjPrFJd4SpVRFY"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/libraries/TickMath.sol": {
        "keccak256": "0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8",
        "urls": [
          "bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70",
          "dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
        "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
        "urls": [
          "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
          "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
        "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
        "urls": [
          "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
          "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
        "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
        "urls": [
          "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
          "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
        "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
        "urls": [
          "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
          "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
        "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
        "urls": [
          "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
          "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/src/types/PoolOperation.sol": {
        "keccak256": "0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162",
        "urls": [
          "bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07",
          "dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/src/base/ImmutableState.sol": {
        "keccak256": "0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a",
        "urls": [
          "bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337",
          "dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/src/interfaces/IImmutableState.sol": {
        "keccak256": "0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b",
        "urls": [
          "bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341",
          "dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/src/utils/BaseHook.sol": {
        "keccak256": "0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89",
        "urls": [
          "bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3",
          "dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra"
        ],
        "license": "MIT"
      },
      "src/Queue.sol": {
        "keccak256": "0xb89a6f0c28d176a29308672eadadc672c795eb9079320730a7d024f46ce78cc8",
        "urls": [
          "bzz-raw://ffee94028f12e2a3bfb5845cbc65fb94c314e564f6d65bf1ab4d9e3487ed1ac0",
          "dweb:/ipfs/QmYdFcMUZB3ikQ538p3sF6mjNBPiYtsUEaB9D7tDuBPfFm"
        ],
        "license": "UNLICENSED"
      },
      "src/Susanoo.sol": {
        "keccak256": "0x02ecaeed20523c0b8e8b6420574d2899dae18aab05adf01d6edde98bbbcb3477",
        "urls": [
          "bzz-raw://eea25bf2fe5d1ed09d11a202d34f5141003bc8fdcce515a75dd2c6df9ab189ba",
          "dweb:/ipfs/QmRneVMkrtRVKrGn5kXFRbhw5iJXRK2KPYfP4siDPo99SD"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 134
}
